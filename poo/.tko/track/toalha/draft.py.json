{
    "patches": [
        {
            "label": "2025-09-17_14-10-56",
            "content": "@@ -1,444 +0,0 @@\n-class Towel: #classe%0A    def __init__(self, color:str, size:str): #construtor%0A        self.color: str = color #atributo%0A        self.size: str = size%0A        self.wetness: int = 0%0A%0A%0A#referencias%0Aprint(%22qual a cor da sua toalha?%22)%0Acolor= input()%0Atowel: Towel = Towel(color, %22P%22) #objeto%0Aprint(f%22Sua toalha %C3%A9 %7Btowel.color%7D%22)%0A# minha.color = %22blue%22%0A# minha.size = %22P%22%0A%0A# esposa = Towel()%0A# esposa.color = %22red%22%0A# esposa.size = %22G%22%0A%0A# gaiato=esposa\n",
            "lines": "0"
        },
        {
            "label": "2025-09-17_14-45-57",
            "content": "@@ -240,10 +240,8 @@\n put(\n-%22%22\n )%0Ato\n",
            "lines": "20"
        },
        {
            "label": "2025-09-17_14-47-51",
            "content": "@@ -5,16 +5,24 @@\n s Towel:\n+ #classe\n %0A    def\n@@ -43,17 +43,16 @@\n , color:\n- \n str, siz\n@@ -57,17 +57,15 @@\n ize:\n- \n str): #\n- \n cons\n@@ -108,17 +108,16 @@\n or #\n- \n atributo\n s%0A  \n@@ -112,17 +112,16 @@\n atributo\n-s\n %0A       \n@@ -177,627 +177,75 @@\n = 0%0A\n-    %0A    def dry(self, amount: int) -%3E None:%0A        self.wetness += amount%0A        if self.wetness %3E= self.isMaxWetness():%0A            self.wetness = self.isMaxWetness()%0A            print(%22A toalha est%C3%A1 %C3%BAmida%22)%0A%0A    def wringOut(self):%0A    %0A    def isMaxWetness(self) -%3E int:%0A        if self.size == %22P%22: # early return%0A            return 10%0A        if self.size == %22M%22:%0A            return 20%0A        if self.size == %22G%22:%0A            return 30%0A        return 0 # default return%0A%0A    def __str__(self) -%3E str: # toString%0A        return f%22Color:%7Bself.color%7D, Size:%7Bself.size%7D, Wet:%7Bself.wetness%7D%22%0A    %0A%0A%0Adef main():%0A    \n+%0A%0A#referencias%0Aprint(%22qual a cor da sua toalha?%22)%0Acolor= input(%22%22)%0A\n towe\n@@ -265,605 +265,182 @@\n wel(\n-%22%22\n+color\n , %22\n+P\n %22)\n-%0A    while True: %0A        line: str = input()%0A        args: list %5Bstr%5D = line.split(%22%22)%0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D ==%22new%22:%0A            color = args%5B1%5D%0A            size = args%5B2%5D%0A            towel = Towel(color, size)%0A        %0A        elif args%5B0%5D\n+ #objeto%0Aprint(f%22Sua toalha %C3%A9 %7Btowel.color%7D%22)%0A# minha.color\n  =\n-=\n  %22\n-dry%22:%0A            amount: int = int(args%5B1%5D)%0A            towel.dry(amount)%0A            %0A        elif args%5B0%5D == %22show%22:%0A            print(t\n+blue%22%0A# minha.size = %22P%22%0A%0A# esposa = T\n owel\n+(\n )%0A\n-        else:%0A            print(%22fail: comando n%C3%A3o encontrado%22)%0A            %0A            %0A    # print(towel1)%0A    # towel1.dry(5)%0A    # print(towel1)%0Amain()\n+# esposa.color = %22red%22%0A# esposa.size = %22G%22%0A%0A# gaiato=esposa\n",
            "lines": "20"
        },
        {
            "label": "2025-10-05_23-55-18",
            "content": "@@ -408,28 +408,24 @@\n self):%0A    %0A\n-    \n     def isMa\n@@ -447,20 +447,16 @@\n -%3E int:%0A\n-    \n         \n@@ -499,28 +499,24 @@\n             \n-    \n return 10%0A  \n@@ -513,20 +513,16 @@\n turn 10%0A\n-    \n         \n@@ -550,28 +550,24 @@\n             \n-    \n return 20%0A  \n@@ -564,20 +564,16 @@\n turn 20%0A\n-    \n         \n@@ -601,28 +601,24 @@\n             \n-    \n return 30%0A  \n@@ -615,20 +615,16 @@\n turn 30%0A\n-    \n         \n",
            "lines": "54"
        },
        {
            "label": "2025-10-05_23-56-50",
            "content": "@@ -408,24 +408,28 @@\n self):%0A    %0A\n+    \n     def isMa\n@@ -451,16 +451,20 @@\n -%3E int:%0A\n+    \n         \n@@ -507,24 +507,28 @@\n             \n+    \n return 10%0A  \n@@ -525,16 +525,20 @@\n turn 10%0A\n+    \n         \n@@ -566,24 +566,28 @@\n             \n+    \n return 20%0A  \n@@ -584,16 +584,20 @@\n turn 20%0A\n+    \n         \n@@ -625,24 +625,28 @@\n             \n+    \n return 30%0A  \n@@ -643,16 +643,20 @@\n turn 30%0A\n+    \n         \n",
            "lines": "54"
        },
        {
            "label": "2025-10-06_00-12-39",
            "content": "@@ -386,18 +386,16 @@\n a%22)%0A%0A   \n- #\n  def wri\n",
            "lines": "54"
        },
        {
            "label": "2025-10-06_00-15-40",
            "content": "@@ -364,16 +364,18 @@\n nt(%22\n+A \n toalha e\n ncha\n@@ -374,15 +374,15 @@\n ha e\n-ncharca\n+st%C3%A1 %C3%BAmi\n da%22)\n@@ -382,24 +382,26 @@\n %C3%BAmida%22)%0A%0A   \n+ #\n  def wringOu\n@@ -413,42 +413,8 @@\n f):%0A\n-        self.wetness = 0%0A        %0A\n     \n@@ -777,128 +777,8 @@\n    %0A\n-    def isDry(self):%0A        if self.wetness == 0 :%0A            return True%0A        else :%0A            return False    %0A\n %0A%0Ade\n",
            "lines": "54"
        },
        {
            "label": "2025-10-06_00-20-30",
            "content": "@@ -1484,14 +1484,87 @@\n        %0A\n+            %0A    # print(towel1)%0A    # towel1.dry(5)%0A    # print(towel1)%0A\n main()\n",
            "lines": "61"
        },
        {
            "label": "2025-10-06_02-22-55",
            "content": "class Towel:\n    def __init__(self, color: str, size: str): # construtor\n        self.color: str = color # atributos\n        self.size: str = size\n        self.wetness: int = 0\n    \n    def dry(self, amount: int) -> None:\n        self.wetness += amount\n        if self.wetness >= self.isMaxWetness():\n            self.wetness = self.isMaxWetness()\n            print(\"toalha encharcada\")\n\n    def wringOut(self):\n        self.wetness = 0\n        \n    \n    def isMaxWetness(self) -> int:\n        if self.size == \"P\": # early return\n            return 10\n        if self.size == \"M\":\n            return 20\n        if self.size == \"G\":\n            return 30\n        return 0 # default return\n\n    def __str__(self) -> str: # toString\n        return f\"Color:{self.color}, Size:{self.size}, Wet:{self.wetness}\"\n    \n    def isDry(self):\n        if self.wetness == 0 :\n            return True\n        else :\n            return False    \n\n\ndef main():\n    towel: Towel = Towel(\"\", \"\")\n    while True: \n        line: str = input()\n        args: list [str] = line.split(\"\")\n        if args[0] == \"end\":\n            break\n        elif args[0] ==\"new\":\n            color = args[1]\n            size = args[2]\n            towel = Towel(color, size)\n        \n        elif args[0] == \"dry\":\n            amount: int = int(args[1])\n            towel.dry(amount)\n            \n        elif args[0] == \"show\":\n            print(towel)\n        else:\n            print(\"fail: comando n\u00e3o encontrado\")\n            \nmain()",
            "lines": "57"
        }
    ]
}