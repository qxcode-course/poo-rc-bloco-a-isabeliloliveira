{
    "patches": [
        {
            "label": "2025-09-23_14-12-28",
            "content": "@@ -1490,9 +1490,8 @@\n passo 1%0A\n-%0A\n",
            "lines": "49"
        },
        {
            "label": "2025-09-23_14-17-38",
            "content": "@@ -747,19 +747,20 @@\n urn f%22Co\n+lo\n r:\n- \n %7Bself.co\n@@ -769,17 +769,13 @@\n r%7D, \n-Tamanho: \n+Size:\n %7Bsel\n@@ -787,17 +787,12 @@\n e%7D, \n-Unidade: \n+Wet:\n %7Bsel\n@@ -983,34 +983,8 @@\n rio%0A\n-        print(%22$%22 + line)%0A\n     \n",
            "lines": "50"
        },
        {
            "label": "2025-09-23_14-24-59",
            "content": "class Towel:\n    def __init__(self, color: str, size: str): # construtor\n        self.color: str = color # atributos\n        self.size: str = size\n        self.wetness: int = 0\n    \n    def dry(self, amount: int) -> None:\n        self.wetness += amount\n        if self.wetness >= self.isMaxWetness():\n            self.wetness = self.isMaxWetness()\n            print(\"toalha saturada, ensopada, pingando\")\n\n    def wringOut(self):\n        self.wetness = 0\n\n    def isMaxWetness(self) -> int:\n        if self.size == \"P\": # early return\n            return 10\n        if self.size == \"M\":\n            return 20\n        if self.size == \"G\":\n            return 30\n        return 0 # default return\n\n    def __str__(self) -> str: # toString\n        return f\"Cor: {self.color}, Tamanho: {self.size}, Unidade: {self.wetness}\"\n\ndef main(): \n    towel: Towel = Towel(\"\", \"\") # 2: criar um obj com qq valor inicial\n    while True: # 3: loop infinito\n\n        line: str = input() # 4: perguntar ao usuario\n        print(\"$\" + line)\n        args: list[str] = line.split(\" \") # 5: separar argumentos\n\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"new\": # color size\n            color: str = args[1]\n            size: str = args[2]\n            towel = Towel(color, size)\n        elif args[0] == \"dry\":\n            amount: int = int(args[1])\n            towel.dry(amount)\n        elif args[0] == \"show\":\n            print(towel)\n        else: # 7: erro\n            print(\"fail: comando n\u00e3o encontrado\")\n\nmain() # passo 1\n\n",
            "lines": "51"
        }
    ]
}